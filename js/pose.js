let PD = (typeof window !== 'undefined' && window.poseDetection) ? window.poseDetection : null;
async function ensurePoseDetection(){ if (PD) return PD; const mod = await import('https://cdn.jsdelivr.net/npm/@tensorflow-models/pose-detection@3.7.0/dist/pose-detection.esm.js'); PD = mod; return PD; }
export class PoseHelper{ constructor(){ this.detector=null; } async load(){ const poseDetection=await ensurePoseDetection(); if(this.detector) return this.detector; const detectorConfig={ modelType: poseDetection.movenet.modelType.SINGLEPOSE_LIGHTNING }; this.detector=await poseDetection.createDetector(poseDetection.SupportedModels.MoveNet, detectorConfig); return this.detector; } async estimate(video){ if(!this.detector) return []; return await this.detector.estimatePoses(video,{flipHorizontal:true}); } }
